## File: shellcode.nim
## Author: nbaertsch
## 
## Example usage of 'PoolProxy' to execute shellcode

import winim/lean
import ../src/PoolProxy/PoolProxy
import nimvoke/dinvoke

# Message box shellcode
var shellcode = @[
    byte   0x48, 0x83, 0xec, 0x28, 0xe8, 0x9f, 0x02, 0x00, 0x00, 0x48, 0x83, 0xc4,
    0x28, 0xc3, 0xcc, 0xcc, 0x48, 0x83, 0xec, 0x18, 0x65, 0x48, 0x8b, 0x04,
    0x25, 0x60, 0x00, 0x00, 0x00, 0x48, 0x89, 0x04, 0x24, 0x48, 0x8b, 0x04,
    0x24, 0x48, 0x83, 0xc4, 0x18, 0xc3, 0xcc, 0xcc, 0x48, 0x89, 0x4c, 0x24,
    0x08, 0x48, 0x83, 0xec, 0x18, 0xc7, 0x04, 0x24, 0x00, 0x00, 0x00, 0x00,
    0x48, 0x8b, 0x44, 0x24, 0x20, 0x0f, 0xbe, 0x00, 0x85, 0xc0, 0x74, 0x58,
    0x8b, 0x04, 0x24, 0xc1, 0xe8, 0x0d, 0x8b, 0x0c, 0x24, 0xc1, 0xe1, 0x13,
    0x0b, 0xc1, 0x89, 0x04, 0x24, 0x48, 0x8b, 0x44, 0x24, 0x20, 0x0f, 0xbe,
    0x00, 0x83, 0xf8, 0x61, 0x7c, 0x11, 0x48, 0x8b, 0x44, 0x24, 0x20, 0x0f,
    0xbe, 0x00, 0x83, 0xe8, 0x20, 0x89, 0x44, 0x24, 0x04, 0xeb, 0x0c, 0x48,
    0x8b, 0x44, 0x24, 0x20, 0x0f, 0xbe, 0x00, 0x89, 0x44, 0x24, 0x04, 0x8b,
    0x44, 0x24, 0x04, 0x8b, 0x0c, 0x24, 0x03, 0xc8, 0x8b, 0xc1, 0x89, 0x04,
    0x24, 0x48, 0x8b, 0x44, 0x24, 0x20, 0x48, 0xff, 0xc0, 0x48, 0x89, 0x44,
    0x24, 0x20, 0xeb, 0x9c, 0x8b, 0x04, 0x24, 0x48, 0x83, 0xc4, 0x18, 0xc3,
    0x48, 0x89, 0x4c, 0x24, 0x08, 0x48, 0x83, 0xec, 0x18, 0xc7, 0x04, 0x24,
    0x10, 0x00, 0x00, 0x00, 0x48, 0x63, 0x04, 0x24, 0x48, 0x8b, 0x4c, 0x24,
    0x20, 0x48, 0x2b, 0xc8, 0x48, 0x8b, 0xc1, 0x48, 0x83, 0xc4, 0x18, 0xc3,
    0x89, 0x4c, 0x24, 0x08, 0x48, 0x81, 0xec, 0x98, 0x00, 0x00, 0x00, 0xe8,
    0x34, 0xff, 0xff, 0xff, 0x48, 0x89, 0x44, 0x24, 0x58, 0x48, 0x8b, 0x44,
    0x24, 0x58, 0x48, 0x8b, 0x40, 0x18, 0x48, 0x8b, 0x40, 0x20, 0x48, 0x89,
    0x44, 0x24, 0x50, 0x48, 0x8b, 0x44, 0x24, 0x50, 0x48, 0x89, 0x44, 0x24,
    0x40, 0x48, 0x8b, 0x4c, 0x24, 0x40, 0xe8, 0xa1, 0xff, 0xff, 0xff, 0x48,
    0x89, 0x44, 0x24, 0x60, 0x48, 0x8b, 0x44, 0x24, 0x40, 0x48, 0x8b, 0x00,
    0x48, 0x89, 0x44, 0x24, 0x40, 0x48, 0x8b, 0x44, 0x24, 0x60, 0x48, 0x8b,
    0x40, 0x30, 0x48, 0x89, 0x44, 0x24, 0x28, 0x48, 0x83, 0x7c, 0x24, 0x28,
    0x00, 0x75, 0x05, 0xe9, 0x58, 0x01, 0x00, 0x00, 0x48, 0x8b, 0x44, 0x24,
    0x28, 0x48, 0x89, 0x44, 0x24, 0x68, 0x48, 0x8b, 0x44, 0x24, 0x68, 0x48,
    0x63, 0x40, 0x3c, 0x48, 0x8b, 0x4c, 0x24, 0x28, 0x48, 0x03, 0xc8, 0x48,
    0x8b, 0xc1, 0x48, 0x89, 0x44, 0x24, 0x70, 0xb8, 0x08, 0x00, 0x00, 0x00,
    0x48, 0x6b, 0xc0, 0x00, 0x48, 0x8b, 0x4c, 0x24, 0x70, 0x8b, 0x84, 0x01,
    0x88, 0x00, 0x00, 0x00, 0x89, 0x44, 0x24, 0x34, 0x83, 0x7c, 0x24, 0x34,
    0x00, 0x75, 0x05, 0xe9, 0x10, 0x01, 0x00, 0x00, 0x8b, 0x44, 0x24, 0x34,
    0x48, 0x8b, 0x4c, 0x24, 0x28, 0x48, 0x03, 0xc8, 0x48, 0x8b, 0xc1, 0x48,
    0x89, 0x44, 0x24, 0x38, 0x48, 0x8b, 0x44, 0x24, 0x38, 0x8b, 0x40, 0x0c,
    0x48, 0x8b, 0x4c, 0x24, 0x28, 0x48, 0x03, 0xc8, 0x48, 0x8b, 0xc1, 0x48,
    0x89, 0x44, 0x24, 0x78, 0x48, 0x8b, 0x4c, 0x24, 0x78, 0xe8, 0x7a, 0xfe,
    0xff, 0xff, 0x89, 0x44, 0x24, 0x48, 0x48, 0x8b, 0x44, 0x24, 0x38, 0x8b,
    0x40, 0x20, 0x48, 0x8b, 0x4c, 0x24, 0x28, 0x48, 0x03, 0xc8, 0x48, 0x8b,
    0xc1, 0x48, 0x89, 0x84, 0x24, 0x80, 0x00, 0x00, 0x00, 0xc7, 0x44, 0x24,
    0x20, 0x00, 0x00, 0x00, 0x00, 0xeb, 0x0a, 0x8b, 0x44, 0x24, 0x20, 0xff,
    0xc0, 0x89, 0x44, 0x24, 0x20, 0x48, 0x8b, 0x44, 0x24, 0x38, 0x8b, 0x40,
    0x18, 0x39, 0x44, 0x24, 0x20, 0x0f, 0x83, 0x95, 0x00, 0x00, 0x00, 0x8b,
    0x44, 0x24, 0x20, 0x48, 0x8b, 0x8c, 0x24, 0x80, 0x00, 0x00, 0x00, 0x8b,
    0x04, 0x81, 0x48, 0x8b, 0x4c, 0x24, 0x28, 0x48, 0x03, 0xc8, 0x48, 0x8b,
    0xc1, 0x48, 0x89, 0x84, 0x24, 0x88, 0x00, 0x00, 0x00, 0x48, 0x8b, 0x8c,
    0x24, 0x88, 0x00, 0x00, 0x00, 0xe8, 0x06, 0xfe, 0xff, 0xff, 0x8b, 0x4c,
    0x24, 0x48, 0x03, 0xc8, 0x8b, 0xc1, 0x39, 0x84, 0x24, 0xa0, 0x00, 0x00,
    0x00, 0x75, 0x50, 0x48, 0x8b, 0x44, 0x24, 0x38, 0x8b, 0x40, 0x24, 0x48,
    0x8b, 0x4c, 0x24, 0x28, 0x48, 0x03, 0xc8, 0x48, 0x8b, 0xc1, 0x8b, 0x4c,
    0x24, 0x20, 0x0f, 0xb7, 0x04, 0x48, 0x66, 0x89, 0x44, 0x24, 0x30, 0x48,
    0x8b, 0x44, 0x24, 0x38, 0x8b, 0x40, 0x1c, 0x48, 0x8b, 0x4c, 0x24, 0x28,
    0x48, 0x03, 0xc8, 0x48, 0x8b, 0xc1, 0x0f, 0xb7, 0x4c, 0x24, 0x30, 0x8b,
    0x04, 0x88, 0x89, 0x44, 0x24, 0x4c, 0x8b, 0x44, 0x24, 0x4c, 0x48, 0x8b,
    0x4c, 0x24, 0x28, 0x48, 0x03, 0xc8, 0x48, 0x8b, 0xc1, 0xeb, 0x17, 0xe9,
    0x4f, 0xff, 0xff, 0xff, 0x48, 0x8b, 0x44, 0x24, 0x50, 0x48, 0x39, 0x44,
    0x24, 0x40, 0x0f, 0x85, 0x61, 0xfe, 0xff, 0xff, 0x33, 0xc0, 0x48, 0x81,
    0xc4, 0x98, 0x00, 0x00, 0x00, 0xc3, 0xcc, 0xcc, 0x48, 0x81, 0xec, 0x98,
    0x00, 0x00, 0x00, 0xb8, 0x75, 0x00, 0x00, 0x00, 0x66, 0x89, 0x44, 0x24,
    0x38, 0xb8, 0x73, 0x00, 0x00, 0x00, 0x66, 0x89, 0x44, 0x24, 0x3a, 0xb8,
    0x65, 0x00, 0x00, 0x00, 0x66, 0x89, 0x44, 0x24, 0x3c, 0xb8, 0x72, 0x00,
    0x00, 0x00, 0x66, 0x89, 0x44, 0x24, 0x3e, 0xb8, 0x33, 0x00, 0x00, 0x00,
    0x66, 0x89, 0x44, 0x24, 0x40, 0xb8, 0x32, 0x00, 0x00, 0x00, 0x66, 0x89,
    0x44, 0x24, 0x42, 0xb8, 0x2e, 0x00, 0x00, 0x00, 0x66, 0x89, 0x44, 0x24,
    0x44, 0xb8, 0x64, 0x00, 0x00, 0x00, 0x66, 0x89, 0x44, 0x24, 0x46, 0xb8,
    0x6c, 0x00, 0x00, 0x00, 0x66, 0x89, 0x44, 0x24, 0x48, 0xb8, 0x6c, 0x00,
    0x00, 0x00, 0x66, 0x89, 0x44, 0x24, 0x4a, 0x33, 0xc0, 0x66, 0x89, 0x44,
    0x24, 0x4c, 0xb8, 0x53, 0x00, 0x00, 0x00, 0x66, 0x89, 0x44, 0x24, 0x20,
    0xb8, 0x68, 0x00, 0x00, 0x00, 0x66, 0x89, 0x44, 0x24, 0x22, 0xb8, 0x65,
    0x00, 0x00, 0x00, 0x66, 0x89, 0x44, 0x24, 0x24, 0xb8, 0x6c, 0x00, 0x00,
    0x00, 0x66, 0x89, 0x44, 0x24, 0x26, 0xb8, 0x6c, 0x00, 0x00, 0x00, 0x66,
    0x89, 0x44, 0x24, 0x28, 0xb8, 0x63, 0x00, 0x00, 0x00, 0x66, 0x89, 0x44,
    0x24, 0x2a, 0xb8, 0x6f, 0x00, 0x00, 0x00, 0x66, 0x89, 0x44, 0x24, 0x2c,
    0xb8, 0x64, 0x00, 0x00, 0x00, 0x66, 0x89, 0x44, 0x24, 0x2e, 0xb8, 0x65,
    0x00, 0x00, 0x00, 0x66, 0x89, 0x44, 0x24, 0x30, 0x33, 0xc0, 0x66, 0x89,
    0x44, 0x24, 0x32, 0xb8, 0x45, 0x00, 0x00, 0x00, 0x66, 0x89, 0x44, 0x24,
    0x50, 0xb8, 0x78, 0x00, 0x00, 0x00, 0x66, 0x89, 0x44, 0x24, 0x52, 0xb8,
    0x65, 0x00, 0x00, 0x00, 0x66, 0x89, 0x44, 0x24, 0x54, 0xb8, 0x63, 0x00,
    0x00, 0x00, 0x66, 0x89, 0x44, 0x24, 0x56, 0xb8, 0x75, 0x00, 0x00, 0x00,
    0x66, 0x89, 0x44, 0x24, 0x58, 0xb8, 0x74, 0x00, 0x00, 0x00, 0x66, 0x89,
    0x44, 0x24, 0x5a, 0xb8, 0x65, 0x00, 0x00, 0x00, 0x66, 0x89, 0x44, 0x24,
    0x5c, 0xb8, 0x64, 0x00, 0x00, 0x00, 0x66, 0x89, 0x44, 0x24, 0x5e, 0xb8,
    0x20, 0x00, 0x00, 0x00, 0x66, 0x89, 0x44, 0x24, 0x60, 0xb8, 0x73, 0x00,
    0x00, 0x00, 0x66, 0x89, 0x44, 0x24, 0x62, 0xb8, 0x68, 0x00, 0x00, 0x00,
    0x66, 0x89, 0x44, 0x24, 0x64, 0xb8, 0x65, 0x00, 0x00, 0x00, 0x66, 0x89,
    0x44, 0x24, 0x66, 0xb8, 0x6c, 0x00, 0x00, 0x00, 0x66, 0x89, 0x44, 0x24,
    0x68, 0xb8, 0x6c, 0x00, 0x00, 0x00, 0x66, 0x89, 0x44, 0x24, 0x6a, 0xb8,
    0x63, 0x00, 0x00, 0x00, 0x66, 0x89, 0x44, 0x24, 0x6c, 0xb8, 0x6f, 0x00,
    0x00, 0x00, 0x66, 0x89, 0x44, 0x24, 0x6e, 0xb8, 0x64, 0x00, 0x00, 0x00,
    0x66, 0x89, 0x44, 0x24, 0x70, 0xb8, 0x65, 0x00, 0x00, 0x00, 0x66, 0x89,
    0x44, 0x24, 0x72, 0xb8, 0x21, 0x00, 0x00, 0x00, 0x66, 0x89, 0x44, 0x24,
    0x74, 0x33, 0xc0, 0x66, 0x89, 0x44, 0x24, 0x76, 0xc7, 0x44, 0x24, 0x78,
    0xa3, 0x10, 0xb7, 0xf8, 0xb9, 0xa3, 0x10, 0xb7, 0xf8, 0xe8, 0x7a, 0xfc,
    0xff, 0xff, 0x48, 0x89, 0x84, 0x24, 0x80, 0x00, 0x00, 0x00, 0x48, 0x8d,
    0x4c, 0x24, 0x38, 0xff, 0x94, 0x24, 0x80, 0x00, 0x00, 0x00, 0xc7, 0x44,
    0x24, 0x7c, 0xb4, 0x78, 0x78, 0xcd, 0xb9, 0xb4, 0x78, 0x78, 0xcd, 0xe8,
    0x54, 0xfc, 0xff, 0xff, 0x48, 0x89, 0x84, 0x24, 0x88, 0x00, 0x00, 0x00,
    0x45, 0x33, 0xc9, 0x4c, 0x8d, 0x44, 0x24, 0x20, 0x48, 0x8d, 0x54, 0x24,
    0x50, 0x33, 0xc9, 0xff, 0x94, 0x24, 0x88, 0x00, 0x00, 0x00, 0x48, 0x81,
    0xc4, 0x98, 0x00, 0x00, 0x00, 0xc3, 0xcc, 0xcc]

when isMainModule:
    var
        hProcess: HANDLE = 0xFFFFFFFFFFFFFFFF # current process
        objectAttributes: OBJECT_ATTRIBUTES = OBJECT_ATTRIBUTES()
        shellcodeSize: SIZE_T = shellcode.len.SIZE_T
        baseAddr: PVOID

    # test debug
    dinvokeDefine(
        ZwAllocateVirtualMemory,
        "ntdll.dll",
        proc (ProcessHandle: Handle, BaseAddress: PVOID, ZeroBits: ULONG_PTR, RegionSize: PSIZE_T, AllocationType: ULONG, Protect: ULONG): NTSTATUS {.stdcall.}
    )
    
    echo "hProcess: ", toHex(hProcess)
    echo "&baseAddr: ", toHex(cast[SIZE_T](&baseAddr))
    echo "0: ", toHex(0)
    echo "&shellcodeSize: ", toHex(cast[SIZE_T](&shellcodeSize))
    echo "MEM_RESERVE or MEM_COMMIT: ", toHex(MEM_RESERVE or MEM_COMMIT)
    echo "PAGE_READWRITE: ", toHex(PAGE_READWRITE)
    discard stdin.readline

    #[var status = poolproxy[NTSTATUS](ZwAllocateVirtualMemory,
        "ntdll.dll",
        hProcess,
        &baseAddr,
        0,
        &shellcodeSize,
        MEM_RESERVE or MEM_COMMIT,
        PAGE_READWRITE
    )]#

    var status = poolproxy(NtAllocateVirtualMemory,
        "ntdll.dll",
        hProcess,
        &baseAddr,
        0.SIZE_T,
        &shellcodeSize,
        (MEM_RESERVE or MEM_COMMIT),
        PAGE_READWRITE
    )
    echo status.toHex()
    
    var bytesWritten: SIZE_T
    

    # ZwWriteVirtualMemory
    status = poolproxy[NTSTATUS](NtWriteVirtualMemory,
        "ntdll.dll",
        hProcess,
        baseAddr,
        &shellcode[0],
        shellcodeSize.SIZE_T,
        cast[PSIZE_T](&bytesWritten)
    )
    echo status.toHex()

    # ZwProtectVirtualMemory
    var oldProtect: DWORD
    status = poolproxy[NTSTATUS](ZwProtectVirtualMemory,
        "ntdll.dll",
        hProcess,
        &baseAddr,
        &shellcodeSize,
        PAGE_EXECUTE_READ,
        &oldProtect
    )
    echo status.toHex()

    # ZwCreateThreadEx
    var hThread: HANDLE
    #[ This exceeds the limit of 8 args that poolproxy allows for.
    status = poolproxy(ZwCreateThreadEx,
        "ntdll.dll",
        &hThread,
        GENERIC_EXECUTE,
        NULL,
        hProcess,
        baseAddr,
        NULL,
        FALSE,
        NULL,
        NULL,
        NULL,
        NULL
    )
    ]#

    hThread = poolproxy[NTSTATUS](CreateThread,
        "kernel32.dll",
        NULL,
        0,
        cast[LPTHREAD_START_ROUTINE](baseAddr),
        NULL,
        0,
        NULL
    )
    echo hThread.toHex()

    WaitForSingleObject(hThread, INFINITE)